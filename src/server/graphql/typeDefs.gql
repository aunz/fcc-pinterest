type Query {
  pins(uid: Int): [Pin]!
  user(id: Int!): User!
  GHclientId: String!
}

type Mutation {
  createUserWithEmail(name: String, email: String!, pw: String!): LoggedInUser
  loginWith(provider: provider!, email: String!, code: String!): LoggedInUser
  logout(token: String!): Int
  updateUser(token: String!, key: String!, value: String!): Int!
  createPin(token: String!, url: String!, title: String, description: String): Int
  delPin(token: String!, id: Int!): Int
}

type User {
  id: Int!
  name: String
  gh_name: String
}

type LoggedInUser {
  id: Int!
  ts: Int
  name: String
  email: String
  gh: String
  gh_name: String
  token: String
}

type Pin {
  id: Int!
  ts: Int
  uid: Int!
  url: String!
  title: String
  description: String
}

enum provider {
  email 
  gh # github
  token
}